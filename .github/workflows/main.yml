name: Setup ngrok and Expose Port on Windows

# Trigger the workflow on push to the main branch
on:
  push:
    branches:
      - main

# Define the jobs for this workflow
jobs:
  build:
    # Specify that the job runs on Windows
    runs-on: windows-latest

    # Steps to execute within the job
    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Download and install the latest ngrok version
      - name: Download latest ngrok
        run: |
          Invoke-WebRequest -Uri https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
          Expand-Archive -Path ngrok.zip -DestinationPath ngrok
          $env:PATH += ";$PWD/ngrok"

      # Step 3: Set up ngrok with your authtoken (replace with your own token)
      - name: Set up ngrok authtoken
        run: |
          .\ngrok\ngrok.exe authtoken 2fuxZSXwhHpP5fYB69m24cxM1ZK_2K44ET6iHG4vTag5VQ9Ps

      # Step 4: Expose a port with ngrok (e.g., port 3389 for RDP or any other port)
      - name: Expose port with ngrok
        run: |
          Start-Process -NoNewWindow -FilePath "$PWD/ngrok/ngrok.exe" -ArgumentList "tcp 3389"

      # Step 5: Wait for ngrok to initialize and retry fetching the public URL
      - name: Wait for ngrok and get public URL
        run: |
          $maxRetries = 10
          $retryCount = 0
          $ngrokUrl = $null
          
          while ($retryCount -lt $maxRetries -and $ngrokUrl -eq $null) {
            try {
              # Attempt to get ngrok URL
              $ngrokUrl = (Invoke-RestMethod -Uri http://localhost:4040/api/tunnels).tunnels[0].public_url
              Write-Output "Ngrok is running at $ngrokUrl"
            } catch {
              # Retry after a short delay
              Write-Output "Waiting for ngrok to start..."
              Start-Sleep -Seconds 5
              $retryCount++
            }
          }

          if ($ngrokUrl -eq $null) {
            Write-Error "Failed to get ngrok URL after $maxRetries retries"
            exit 1
          }
